{"ast":null,"code":"var _jsxFileName = \"/Users/chloedecampos/Documents/GitHub/limerick_smash_cinematic/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './App.css'; // Import your CSS file for styling\n// import ScrollyVideo from 'scrolly-video/dist/ScrollyVideo.cjs.jsx';\n\n// function App() {\n\n//   const [roomCode, setRoomCode] = useState('');\n//   const [showRulesPopup, setShowRulesPopup] = useState(false); // State to control the visibility of the rules popup\n\n//   const handleInputChange = (event) => {\n//     setRoomCode(event.target.value);\n//   };\n\n//   const handleSubmit = () => {\n//     if (roomCode.trim() !== '') {\n//       // Redirect to the URL with the room code\n//       window.location.href = `https://limericksmash.com/games/${roomCode}`;\n//     }\n//   };\n\n//   const handleScroll = () => {\n//     const contentOffset = window.innerHeight;\n//     const targetOffset = window.innerHeight * 10; // Adjust this value according to your layout\n//     const currentScroll = window.scrollY;\n\n//     console.log(contentOffset, targetOffset, currentScroll)\n\n//     if (currentScroll >= contentOffset && currentScroll < targetOffset) {\n//       console.log('a')\n//       // Scroll position is within the content area\n//       window.scrollTo({ top: 1200, behavior: 'smooth' });\n//     } else {\n//       console.log('b')\n//       // Scroll position is already at or beyond the target\n//       window.scrollTo({ top: 1300, behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n\n//       <div className={`content-visible`}>\n\n//       <div style={{height:\"300vh\", zIndex:0,}}> \n\n//           <ScrollyVideo \n//           frameThreshold ={0.2}\n//           videoPercentage = {.6}\n//           debug\n//           trackscroll cover sticky src=\"/parallax/full.mp4\" />\n//         </div>\n\n//         <div>\n//         <button className=\"rules-button\" onClick={() =>  {setShowRulesPopup(!showRulesPopup)}}>\n//           <img style={{ width: \"20px\", fill: \"#FFFFFF\" }} src=\"/lightbulg.svg\" alt=\"Lightbulb Icon\" />\n//         </button>\n\n//             {/* Rules popup */}\n//           <div className={`rules-popup ${showRulesPopup ? 'show' : ''}`}>\n//               <div className = \"popuptext\">\n//             <button style={{width:\"30px\", height:\"30px\", position: 'absolute', right: \"20px\", bottom:\"20px\"}}onClick={() => {\n//                   setShowRulesPopup(false)\n//                 }}>\n//                   <img src=\"/close-circle-svgrepo-com 1.svg\" />\n//                 </button>\n//               <div className=\"rules-content\">\n//                 <h2>What's a Limerick?</h2>\n//                 <p>A limerick is a five-line poem with a distinctive rhythm and rhyme scheme. It usually has a humorous or nonsensical theme. </p>\n//                 <p>The rhyme scheme is typically AABBA.</p>\n//                 <p>\n//                 <span className=\"indented lineATitle\">A:</span> <span className=\"lineA\">  Welcome to a game most fine</span>\n//                 </p>\n//                 <p>\n//                 <span className=\"indented lineATitle\">A:</span> <span className=\"lineA\">   Where each round we write one more line</span>\n//                 </p>\n//                 <p>\n//                 <span className=\"indented lineBTitle\">B:</span> <span className=\"lineB\"> With each line we compete</span>\n//                 </p>\n//                 <p> \n//                 <span className=\"indented lineBTitle\">B:</span> <span className=\" lineB\">  Till the limerick's complete</span>\n//                 </p>\n//                 <p>\n//                 <span className=\"indented lineATitle\">A:</span> <span className=\" lineA\"> And in legend the winner's enshrined!</span >\n//                 </p>\n\n//                 <p>The structure often follows anapestic meter, with the first, second, and fifth lines having three stressed syllables and the third and fourth lines having two stressed syllables.</p>\n//                 </div>\n//             </div>\n//           </div>\n\n//         <div className={`centerContent ${showRulesPopup ? 'centerContent-hidden' : ''}`}>\n//           <button className=\"scroll-down-button\" onClick={handleScroll}>\n//           Scroll Down\n//           </button>\n//           <div class=\"thevideo\"></div>\n\n//           <h1>LIMERICK SMASH</h1>\n//           <div className=\"input-container\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter room code\"\n//               value={roomCode}\n//               onChange={handleInputChange}\n//             />\n//             <button onClick={handleSubmit}>Create or Join Room</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport './App.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showContent, setShowContent] = useState(false);\n  const handleAnimationEnd = () => {\n    // Animation video has ended, show the main content\n    setShowContent(true);\n  };\n  const handleAnimationButtonClick = () => {\n    // Trigger animation by playing the video\n    const video = document.getElementById('animation-video');\n    video.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"animation-video\",\n      muted: true,\n      onEnded: handleAnimationEnd,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"parallax/botto.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"animation-button\",\n      style: {\n        position: 'absolute'\n      },\n      onClick: handleAnimationButtonClick,\n      children: \"Play Animation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), showContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ctyFTU6FtKw4IvTTir6REm3bBsM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","showContent","setShowContent","handleAnimationEnd","handleAnimationButtonClick","video","document","getElementById","play","position"],"sources":["/Users/chloedecampos/Documents/GitHub/limerick_smash_cinematic/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css'; // Import your CSS file for styling\n// import ScrollyVideo from 'scrolly-video/dist/ScrollyVideo.cjs.jsx';\n\n// function App() {\n\n//   const [roomCode, setRoomCode] = useState('');\n//   const [showRulesPopup, setShowRulesPopup] = useState(false); // State to control the visibility of the rules popup\n\n\n//   const handleInputChange = (event) => {\n//     setRoomCode(event.target.value);\n//   };\n\n//   const handleSubmit = () => {\n//     if (roomCode.trim() !== '') {\n//       // Redirect to the URL with the room code\n//       window.location.href = `https://limericksmash.com/games/${roomCode}`;\n//     }\n//   };\n\n//   const handleScroll = () => {\n//     const contentOffset = window.innerHeight;\n//     const targetOffset = window.innerHeight * 10; // Adjust this value according to your layout\n//     const currentScroll = window.scrollY;\n  \n//     console.log(contentOffset, targetOffset, currentScroll)\n\n\n//     if (currentScroll >= contentOffset && currentScroll < targetOffset) {\n//       console.log('a')\n//       // Scroll position is within the content area\n//       window.scrollTo({ top: 1200, behavior: 'smooth' });\n//     } else {\n//       console.log('b')\n//       // Scroll position is already at or beyond the target\n//       window.scrollTo({ top: 1300, behavior: 'smooth' });\n//     }\n//   };\n\n\n//   return (\n//     <div className=\"App\">\n  \n\n\n//       <div className={`content-visible`}>\n\n       \n\n\n//       <div style={{height:\"300vh\", zIndex:0,}}> \n        \n//           <ScrollyVideo \n//           frameThreshold ={0.2}\n//           videoPercentage = {.6}\n//           debug\n//           trackscroll cover sticky src=\"/parallax/full.mp4\" />\n//         </div>\n       \n//         <div>\n//         <button className=\"rules-button\" onClick={() =>  {setShowRulesPopup(!showRulesPopup)}}>\n//           <img style={{ width: \"20px\", fill: \"#FFFFFF\" }} src=\"/lightbulg.svg\" alt=\"Lightbulb Icon\" />\n//         </button>\n\n//             {/* Rules popup */}\n//           <div className={`rules-popup ${showRulesPopup ? 'show' : ''}`}>\n//               <div className = \"popuptext\">\n//             <button style={{width:\"30px\", height:\"30px\", position: 'absolute', right: \"20px\", bottom:\"20px\"}}onClick={() => {\n//                   setShowRulesPopup(false)\n//                 }}>\n//                   <img src=\"/close-circle-svgrepo-com 1.svg\" />\n//                 </button>\n//               <div className=\"rules-content\">\n//                 <h2>What's a Limerick?</h2>\n//                 <p>A limerick is a five-line poem with a distinctive rhythm and rhyme scheme. It usually has a humorous or nonsensical theme. </p>\n//                 <p>The rhyme scheme is typically AABBA.</p>\n//                 <p>\n//                 <span className=\"indented lineATitle\">A:</span> <span className=\"lineA\">  Welcome to a game most fine</span>\n//                 </p>\n//                 <p>\n//                 <span className=\"indented lineATitle\">A:</span> <span className=\"lineA\">   Where each round we write one more line</span>\n//                 </p>\n//                 <p>\n//                 <span className=\"indented lineBTitle\">B:</span> <span className=\"lineB\"> With each line we compete</span>\n//                 </p>\n//                 <p> \n//                 <span className=\"indented lineBTitle\">B:</span> <span className=\" lineB\">  Till the limerick's complete</span>\n//                 </p>\n//                 <p>\n//                 <span className=\"indented lineATitle\">A:</span> <span className=\" lineA\"> And in legend the winner's enshrined!</span >\n//                 </p>\n                \n//                 <p>The structure often follows anapestic meter, with the first, second, and fifth lines having three stressed syllables and the third and fourth lines having two stressed syllables.</p>\n//                 </div>\n//             </div>\n//           </div>\n\n\n        \n\n//         <div className={`centerContent ${showRulesPopup ? 'centerContent-hidden' : ''}`}>\n//           <button className=\"scroll-down-button\" onClick={handleScroll}>\n//           Scroll Down\n//           </button>\n//           <div class=\"thevideo\"></div>\n\n//           <h1>LIMERICK SMASH</h1>\n//           <div className=\"input-container\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter room code\"\n//               value={roomCode}\n//               onChange={handleInputChange}\n//             />\n//             <button onClick={handleSubmit}>Create or Join Room</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n \nimport React, { useState } from 'react';\nimport './App.css'; // Import your CSS file for styling\n\nfunction App() {\n  const [showContent, setShowContent] = useState(false);\n\n  const handleAnimationEnd = () => {\n    // Animation video has ended, show the main content\n    setShowContent(true);\n  };\n\n  const handleAnimationButtonClick = () => {\n    // Trigger animation by playing the video\n    const video = document.getElementById('animation-video');\n    video.play();\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Animation video */}\n      <video id=\"animation-video\" muted onEnded={handleAnimationEnd}>\n        <source src=\"parallax/botto.mp4\" type=\"video/mp4\" />\n      </video>\n\n      {/* Button for triggering animation */}\n      <button className=\"animation-button\" style={{position:'absolute'}} onClick={handleAnimationButtonClick}>\n        Play Animation\n      </button>\n\n      {/* Main content */}\n      {showContent && (\n        <div className=\"main-content\">\n          hi\n          {/* Your main content components */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAIA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA;AAEpB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMI,kBAAkB,GAAG,MAAM;IAC/B;IACAD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,0BAA0B,GAAG,MAAM;IACvC;IACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;IACxDF,KAAK,CAACG,IAAI,EAAE;EACd,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAElB;MAAO,EAAE,EAAC,iBAAiB;MAAC,KAAK;MAAC,OAAO,EAAEL,kBAAmB;MAAA,uBAC5D;QAAQ,GAAG,EAAC,oBAAoB;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC9C,eAGR;MAAQ,SAAS,EAAC,kBAAkB;MAAC,KAAK,EAAE;QAACM,QAAQ,EAAC;MAAU,CAAE;MAAC,OAAO,EAAEL,0BAA2B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE9F,EAGRH,WAAW,iBACV;MAAK,SAAS,EAAC,cAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAI9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAnCQD,GAAG;AAAA,KAAHA,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}