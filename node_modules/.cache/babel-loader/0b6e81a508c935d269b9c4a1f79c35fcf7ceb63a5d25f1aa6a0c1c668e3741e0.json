{"ast":null,"code":"var _jsxFileName = \"/Users/chloedecampos/Documents/GitHub/limerick_smash_cinematic/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css'; // Make sure to import your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [firstPartEnded, setFirstPartEnded] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1); // Start with normal speed\n  const bouncingVideoRef = useRef(null);\n\n  // Function to randomize playback rate\n  const randomizePlaybackRate = () => {\n    // Random rate between 0.5 and 2, for example\n    const rate = Math.random() * 1.5 + 0.5;\n    setPlaybackRate(rate);\n  };\n  useEffect(() => {\n    const video = bouncingVideoRef.current;\n    if (video) {\n      video.playbackRate = playbackRate;\n\n      // Optional: Change rate on each loop\n      video.addEventListener('ended', () => {\n        video.play(); // Ensure it loops\n        randomizePlaybackRate(); // Randomize rate for next loop\n      });\n    }\n\n    // Cleanup to remove event listener\n    return () => {\n      if (video) {\n        video.removeEventListener('ended', randomizePlaybackRate);\n      }\n    };\n  }, [playbackRate]); // Re-apply when playbackRate changes\n\n  // Your existing code for handling video end, etc.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: firstPartEnded && /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: bouncingVideoRef,\n      autoPlay: true,\n      loop: true,\n      muted: true // Consider muting to ensure autoplay in most browsers\n      ,\n      className: \"looping-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/bouncable.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rUjVutWtg2R/uUyuEU3UkPB1WDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","App","firstPartEnded","setFirstPartEnded","playbackRate","setPlaybackRate","bouncingVideoRef","randomizePlaybackRate","rate","Math","random","video","current","addEventListener","play","removeEventListener"],"sources":["/Users/chloedecampos/Documents/GitHub/limerick_smash_cinematic/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css'; // Make sure to import your CSS for styling\n\nfunction App() {\n  const [firstPartEnded, setFirstPartEnded] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1); // Start with normal speed\n  const bouncingVideoRef = useRef(null);\n\n  // Function to randomize playback rate\n  const randomizePlaybackRate = () => {\n    // Random rate between 0.5 and 2, for example\n    const rate = Math.random() * 1.5 + 0.5;\n    setPlaybackRate(rate);\n  };\n\n  useEffect(() => {\n    const video = bouncingVideoRef.current;\n    if (video) {\n      video.playbackRate = playbackRate;\n\n      // Optional: Change rate on each loop\n      video.addEventListener('ended', () => {\n        video.play(); // Ensure it loops\n        randomizePlaybackRate(); // Randomize rate for next loop\n      });\n    }\n\n    // Cleanup to remove event listener\n    return () => {\n      if (video) {\n        video.removeEventListener('ended', randomizePlaybackRate);\n      }\n    };\n  }, [playbackRate]); // Re-apply when playbackRate changes\n\n  // Your existing code for handling video end, etc.\n\n  return (\n    <div className=\"App\">\n      {/* Your existing JSX */}\n      {firstPartEnded && (\n        <video\n          ref={bouncingVideoRef}\n          autoPlay\n          loop\n          muted // Consider muting to ensure autoplay in most browsers\n          className=\"looping-video\"\n        >\n          <source src=\"/bouncable.mp4\" type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n      )}\n      {/* Rest of your component */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,WAAW,CAAC,CAAC;AAAA;AAEpB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAMQ,gBAAgB,GAAGP,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAMQ,qBAAqB,GAAG,MAAM;IAClC;IACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG;IACtCL,eAAe,CAACG,IAAI,CAAC;EACvB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGL,gBAAgB,CAACM,OAAO;IACtC,IAAID,KAAK,EAAE;MACTA,KAAK,CAACP,YAAY,GAAGA,YAAY;;MAEjC;MACAO,KAAK,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACpCF,KAAK,CAACG,IAAI,EAAE,CAAC,CAAC;QACdP,qBAAqB,EAAE,CAAC,CAAC;MAC3B,CAAC,CAAC;IACJ;;IAEA;IACA,OAAO,MAAM;MACX,IAAII,KAAK,EAAE;QACTA,KAAK,CAACI,mBAAmB,CAAC,OAAO,EAAER,qBAAqB,CAAC;MAC3D;IACF,CAAC;EACH,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,UAEjBF,cAAc,iBACb;MACE,GAAG,EAAEI,gBAAiB;MACtB,QAAQ;MACR,IAAI;MACJ,KAAK,OAAC;MAAA;MACN,SAAS,EAAC,eAAe;MAAA,wBAEzB;QAAQ,GAAG,EAAC,gBAAgB;QAAC,IAAI,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAGnD;IAAA;IAAA;IAAA;EAAA,QAEG;AAEV;AAAC,GApDQL,GAAG;AAAA,KAAHA,GAAG;AAsDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}